networks:
  bridge: {}

services:
  tps_postgres:
    image: postgres:16.4
    container_name: tps_postgres
    restart: always
    volumes:
      - ~/.pg/pg_data/tps:/var/lib/postgresql/data
    env_file:
      - .env
    networks:
      - bridge
    ports:
      - "7198:5432"

  tps:
    container_name: tps_system
    build: .
    volumes:
      - static:/app/static
      - media:/app/media
      - ./django_errors.log:/app/django_errors.log
    env_file:
      - .env
    depends_on:
      - tps_postgres
    networks:
      - bridge
    command: bash -c "poetry run python manage.py makemigrations && poetry run python manage.py migrate && poetry run python manage.py collectstatic --noinput && poetry run python manage.py runserver 0.0.0.0:8000"

  nginx:
    build:
      dockerfile: ./Dockerfile
      context: ./docker/nginx/
    container_name: tps_nginx
    image: tps_nginx
    volumes:
      - static:/app/static
      - media:/app/media
      - ./docker/certbot/conf:/etc/letsencrypt:ro
      - ./docker/certbot/www:/var/www/certbot:ro
      - ./docker/nginx/logs:/var/log/nginx:rw
    depends_on:
      - tps
    networks:
      - bridge
    ports:
      - "80:80"
      - "443:443"
    command: "/bin/sh -c 'while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g \"daemon off;\"'"

  certbot:
    image: certbot/certbot
    container_name: tps_certbot
    volumes:
      - ./docker/certbot/conf:/etc/letsencrypt
      - ./docker/certbot/www:/var/www/certbot
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"

volumes:
  pg_data:
  static:
  media: